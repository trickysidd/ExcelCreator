name: Prepare Offline Python Packages

on:
  push:
    branches:
      - main # Trigger this workflow on pushes to main

jobs:
  download-wheels:
    runs-on: windows-latest # Or windows-latest if the target machine is Windows

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4
        # This assumes your project's main requirements are listed in requirements.txt

      - name: Set up Python environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Create directory for wheels and install 'wheel' utility
        run: |
          mkdir -p wheelhouse
          pip install wheel

      - name: Use 'pip download' to fetch all dependencies as wheel files
        # Reads requirements.txt and downloads all necessary .whl files to 'wheelhouse/'
        run: |
          pip download -r requirements.txt --wheel-dir=wheelhouse

      - name: Create a single ZIP archive of the 'wheelhouse' directory
        # This makes it easy to download the entire package set as one artifact
        run: |
          zip -r offline_wheels.zip wheelhouse

      - name: Upload the compressed wheels archive as a GitHub Artifact
        uses: actions/upload-artifact@v4
        with:
          name: packaged-python-wheels # Name of the artifact to download from GitHub UI
          path: offline_wheels.zip      # The file to be uploaded
          retention-days: 7            # Optional: how long GitHub keeps the artifact
